# Generated by Django 2.2 on 2020-03-29 18:59

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='boughtProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField(blank=True, null=True, verbose_name='商品id')),
                ('username', models.CharField(blank=True, max_length=30, null=True, verbose_name='姓名')),
            ],
            options={
                'verbose_name': '已买的产品',
                'verbose_name_plural': '已买的产品',
            },
        ),
        migrations.CreateModel(
            name='checkList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=30, null=True, verbose_name='姓名')),
                ('checkDate', models.DateField(auto_now=True, verbose_name='签到日期')),
            ],
            options={
                'verbose_name': '签到记录',
                'verbose_name_plural': '签到记录',
            },
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=30, null=True, verbose_name='姓名')),
                ('points', models.CharField(default='0', max_length=20, verbose_name='积分')),
                ('coins', models.CharField(default='0', max_length=20, verbose_name='虚拟币')),
                ('checknum', models.CharField(default='0', max_length=20, verbose_name='打卡天数')),
                ('scholarship', models.CharField(default='0', max_length=20, verbose_name='奖学金')),
            ],
            options={
                'verbose_name': '用户数据',
                'verbose_name_plural': '用户数据',
            },
        ),
        migrations.CreateModel(
            name='shoppingCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField(blank=True, null=True, verbose_name='商品id')),
                ('quantity', models.IntegerField(blank=True, null=True, verbose_name='商品数量')),
            ],
            options={
                'verbose_name': '购物车',
                'verbose_name_plural': '购物车',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taskname', models.CharField(blank=True, max_length=30, null=True, verbose_name='任务名称')),
                ('taskpoints', models.IntegerField(blank=True, null=True, verbose_name='任务积分')),
            ],
            options={
                'verbose_name': '任务',
                'verbose_name_plural': '任务',
            },
        ),
        migrations.CreateModel(
            name='tradeRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField(blank=True, null=True, verbose_name='商品id')),
                ('Date', models.DateField(auto_now=True, verbose_name='购买日期')),
                ('Sum', models.CharField(blank=True, max_length=15, null=True, verbose_name='商品买的时候价值')),
            ],
            options={
                'verbose_name': '交易记录',
                'verbose_name_plural': '交易记录',
            },
        ),
        migrations.CreateModel(
            name='taskList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taskDate', models.DateField(default=django.utils.timezone.now, verbose_name='任务完成时间')),
                ('username', models.CharField(blank=True, max_length=30, null=True, verbose_name='用户姓名')),
                ('task', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Task')),
            ],
            options={
                'verbose_name': '已完成任务表',
                'verbose_name_plural': '已完成任务表',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=30, null=True, verbose_name='姓名')),
                ('gender', models.CharField(choices=[('male', '男'), ('female', '女')], max_length=6)),
                ('mobile', models.CharField(max_length=11, verbose_name='电话')),
                ('email', models.CharField(blank=True, max_length=100, null=True, verbose_name='邮箱')),
                ('auth', models.CharField(default='common', max_length=10, verbose_name='权限')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
